<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.timisakura.dao.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.timisakura.pojo.Employee" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="realName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="tel" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="dept_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="inputTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="state" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="admin" jdbcType="BIT" javaType="java.lang.Boolean" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, realName, password, tel, email, dept_id, inputTime, state, admin
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!--通过名字查询这个对象-->
  <select id="findUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from employee
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.timisakura.pojo.Employee" >
    insert into employee (id, username, realName, 
      password, tel, email, 
      dept_id, inputTime, state, 
      admin)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{deptId,jdbcType=INTEGER}, #{inputtime,jdbcType=TIMESTAMP}, #{state,jdbcType=BIT}, 
      #{admin,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.timisakura.pojo.Employee" >
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="realname != null" >
        realName,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="inputtime != null" >
        inputTime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="admin != null" >
        admin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="inputtime != null" >
        #{inputtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIT},
      </if>
      <if test="admin != null" >
        #{admin,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.timisakura.pojo.Employee" >
    update employee
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realName = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="inputtime != null" >
        inputTime = #{inputtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
      <if test="admin != null" >
        admin = #{admin,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.timisakura.pojo.Employee" >
    update employee
    set username = #{username,jdbcType=VARCHAR},
      realName = #{realname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=INTEGER},
      inputTime = #{inputtime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=BIT},
      admin = #{admin,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="checkEmployeename" resultType="int" parameterType="java.lang.String" >
 select count(*) from employee
  where username = #{username,jdbcType=VARCHAR}
</select>
  <select id="checkEmail" resultType="int" parameterType="java.lang.String" >
  select count(*) from employee where email= #{email,jdbcType=VARCHAR}
  </select>
</mapper>