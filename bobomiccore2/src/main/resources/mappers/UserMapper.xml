<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.timisakura.dao.UserMapper" >
 <resultMap id="BaseResultMap" type="com.timisakura.pojo.User" >
    <constructor >
      <idArg column="userid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <resultMap id="BaseResultMap1" type="com.timisakura.pojo.User">
    <constructor >
      <idArg column="userid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
<collection property="permissions" ofType="com.timisakura.pojo.Permission">
  <id property="id" column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
  <result property="name" column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
  <result property="resource" column="resource" jdbcType="VARCHAR" javaType="java.lang.String" />
</collection>

  </resultMap>
  <sql id="Base_Column_List" >
    userid, name, password
  </sql>
  <sql id="Base_Column_List1" >
    userid, name, password,permission
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap1" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userid = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.timisakura.pojo.User" >
    insert into user (userid, name, password
      )
    values (#{userid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.timisakura.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.timisakura.pojo.User" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.timisakura.pojo.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <select id="selectuserpermission" parameterType="java.lang.Integer" resultMap="BaseResultMap1">
    SELECT
`user`.userid,
`user`.`name`,
`user`.`password`,
`userid-permissionid`.id,
`userid-permissionid`.user_id,
`userid-permissionid`.permission_id,
permission.id,
permission.`name`,
permission.resource
FROM
`user`
INNER JOIN `userid-permissionid` ON `user`.userid = `userid-permissionid`.user_id
INNER JOIN permission ON `userid-permissionid`.permission_id = permission.id
WHERE userid = #{userid,jdbcType=INTEGER}
  </select>
    <select id="selectuserpermissionname" parameterType="java.lang.String" resultMap="BaseResultMap1">
  SELECT
`user`.userid,
`user`.`name`,
`user`.`password`,
`userid-permissionid`.id,
`userid-permissionid`.user_id,
`userid-permissionid`.permission_id,
permission.id,
permission.`name`,
permission.`resource`
FROM
`user`
INNER JOIN `userid-permissionid` ON `user`.userid = `userid-permissionid`.user_id
INNER JOIN permission ON `userid-permissionid`.permission_id = permission.id
WHERE userid = (SELECT
`user`.userid
FROM
`user`
WHERE name = #{name,jdbcType=VARCHAR})

  </select>
</mapper>